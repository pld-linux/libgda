diff -urN libgda-1.2.3.org/acconfig.h libgda-1.2.3/acconfig.h
--- libgda-1.2.3.org/acconfig.h	2002-12-29 22:30:02.000000000 +0100
+++ libgda-1.2.3/acconfig.h	2006-12-25 13:46:59.814088000 +0100
@@ -13,6 +13,8 @@
 #undef HAVE_FREETDS
 #undef HAVE_FREETDS_VER0_5X
 #undef HAVE_FREETDS_VER0_6X
+#undef HAVE_FREETDS_VER0_63
+#undef HAVE_FREETDS_VER0_64
 #undef HAVE_SYBASE
 #undef HAVE_IBMDB2
 #undef SYBASE_DEBUG
diff -urN libgda-1.2.3.org/configure.in libgda-1.2.3/configure.in
--- libgda-1.2.3.org/configure.in	2005-10-27 11:18:24.000000000 +0200
+++ libgda-1.2.3/configure.in	2006-12-25 13:43:06.423502000 +0100
@@ -460,7 +460,15 @@
 					FREETDS_LIBS="-L${freetdsdir}/lib -ltds"
 					AC_DEFINE(HAVE_FREETDS, 1, [Have freetds])
 					;;
-				*v0.6[[3-9]]*) AC_MSG_RESULT($freetdsvercheck - using v0.63 api)
+				*v0.6[[4-9]]*) AC_MSG_RESULT($freetdsvercheck - using v0.64 api)
+					AC_DEFINE(HAVE_FREETDS_VER0_63, 1, [Have freetds v0.63 API])
+					AC_DEFINE(HAVE_FREETDS_VER0_64, 1, [Have freetds v0.64 API])
+					AC_DEFINE(HAVE_FREETDS_VER0_6X, 1, [Have freetds v0.6x API])
+					FREETDS_CFLAGS="-I${includedir}"
+					FREETDS_LIBS="-L${libdir} -ltds"
+					AC_DEFINE(HAVE_FREETDS, 1, [Have freetds])
+					;;
+				*v0.63) AC_MSG_RESULT($freetdsvercheck - using v0.63 api)
 					AC_DEFINE(HAVE_FREETDS_VER0_63, 1, [Have freetds v0.63 API])
 					AC_DEFINE(HAVE_FREETDS_VER0_6X, 1, [Have freetds v0.6x API])
 					FREETDS_CFLAGS="-I${includedir}"
--- libgda-1.2.4/providers/freetds/gda-freetds-provider.c.orig	2007-01-09 13:50:54.000000000 +0100
+++ libgda-1.2.4/providers/freetds/gda-freetds-provider.c	2007-05-31 23:00:11.774634419 +0200
@@ -117,10 +117,10 @@
 						    void *bStruct,
                                                     const gboolean is_err_msg);
 #if defined(HAVE_FREETDS_VER0_6X) || defined(HAVE_FREETDS_VER0_60)
-  static int gda_freetds_provider_tds_handle_info_msg (TDSCONTEXT *,
+  static int gda_freetds_provider_tds_handle_info_msg (const TDSCONTEXT *,
                                                        TDSSOCKET *,
                                                        TDSMSGINFO *);
-  static int gda_freetds_provider_tds_handle_err_msg (TDSCONTEXT *,
+  static int gda_freetds_provider_tds_handle_err_msg (const TDSCONTEXT *,
                                                       TDSSOCKET *,
                                                       TDSMSGINFO *);
 #else
@@ -253,7 +253,11 @@
 
 	/* Version 0.60 api uses context additionaly */
 #if defined(HAVE_FREETDS_VER0_6X) || defined(HAVE_FREETDS_VER0_60)
+#if defined(HAVE_FREETDS_VER0_64)
+	tds_cnc->ctx = tds_alloc_context(NULL);
+#else
 	tds_cnc->ctx = tds_alloc_context();
+#endif
 	if (! tds_cnc->ctx) {
 		gda_log_error (_("Allocating tds context failed."));
 		gda_freetds_free_connection_data (tds_cnc);
@@ -804,7 +808,9 @@
 	}
 
 	/* there should not be any result tokens */
-#if defined(HAVE_FREETDS_VER0_63)
+#if defined(HAVE_FREETDS_VER0_64)
+	while ((tds_cnc->rc = tds_process_tokens (tds_cnc->tds, &tds_cnc->result_type, NULL, TDS_RETURN_ROWFMT | TDS_RETURN_COMPUTEFMT | TDS_RETURN_DONE | TDS_STOPAT_ROW | TDS_STOPAT_COMPUTE | TDS_RETURN_PROC))
+#elif defined(HAVE_FREETDS_VER0_63)
 	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds, &tds_cnc->result_type, NULL))
 #elif defined(HAVE_FREETDS_VER0_6X)
 	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds, &tds_cnc->result_type))
@@ -1062,9 +1068,15 @@
 	                      TDS_SUCCEED);
 
 	msg = g_strdup_printf(_("Msg %d, Level %d, State %d, Server %s, Line %d\n%s\n"),
+#if defined(HAVE_FREETDS_VER0_64)
+			      msg_info->msgno,
+			      msg_info->severity,
+			      msg_info->state,
+#else
 	                      msg_info->msg_number,
 	                      msg_info->msg_level,
 	                      msg_info->msg_state,
+#endif
 	                      (msg_info->server ? msg_info->server : ""),
 	                      msg_info->line_number,
 	                      msg_info->message ? msg_info->message : "");
@@ -1074,7 +1086,11 @@
 		if (cnc != NULL) {
 			error = gda_error_new ();
 			gda_error_set_description (error, msg);
+#if defined(HAVE_FREETDS_VER0_64)
+			gda_error_set_number (error, msg_info->msgno);
+#else
 			gda_error_set_number (error, msg_info->msg_number);
+#endif
 			gda_error_set_source (error, "gda-freetds");
 			if (msg_info->sql_state != NULL) {
 				gda_error_set_sqlstate (error,
@@ -1102,7 +1118,7 @@
 #if defined(HAVE_FREETDS_VER0_6X) || defined(HAVE_FREETDS_VER0_60)
 /* FIXME: rewrite tds_handle_message as well/use new parameters here */
 static int
-gda_freetds_provider_tds_handle_info_msg (TDSCONTEXT *ctx, TDSSOCKET *tds,
+gda_freetds_provider_tds_handle_info_msg (const TDSCONTEXT *ctx, TDSSOCKET *tds,
                                           TDSMSGINFO *msg)
 {
 	return gda_freetds_provider_tds_handle_message ((void *) tds,
@@ -1124,7 +1140,7 @@
 #if defined(HAVE_FREETDS_VER0_6X) || defined(HAVE_FREETDS_VER0_60)
 /* FIXME: rewrite tds_handle_message as well/use new parameters here */
 static int
-gda_freetds_provider_tds_handle_err_msg (TDSCONTEXT *ctx, TDSSOCKET *tds,
+gda_freetds_provider_tds_handle_err_msg (const TDSCONTEXT *ctx, TDSSOCKET *tds,
                                          TDSMSGINFO *msg)
 {
 	return gda_freetds_provider_tds_handle_message ((void *) tds,
--- libgda-1.2.4/providers/freetds/gda-freetds-recordset.c.orig	2007-01-09 13:50:54.000000000 +0100
+++ libgda-1.2.4/providers/freetds/gda-freetds-recordset.c	2007-05-31 22:57:55.998897000 +0200
@@ -339,7 +339,18 @@
 	recset->priv->tds_cnc = tds_cnc;
 	recset->priv->res = tds_cnc->tds->res_info;
 
-#ifdef HAVE_FREETDS_VER0_63
+#ifdef HAVE_FREETDS_VER0_64
+	while ((tds_cnc->rc = tds_process_tokens (tds_cnc->tds,
+							 &tds_cnc->result_type, NULL,
+							 TDS_RETURN_ROWFMT | TDS_RETURN_COMPUTEFMT |
+							 TDS_RETURN_DONE | TDS_STOPAT_ROW |
+							 TDS_STOPAT_COMPUTE | TDS_RETURN_PROC))
+	      == TDS_SUCCEED) {
+	       if (tds_cnc->result_type == TDS_ROW_RESULT) {
+		       gint row_type, compute_id;
+
+		       while ((tds_cnc->rc = tds_process_tokens(tds_cnc->tds, &row_type, &compute_id, TDS_STOPAT_ROWFMT | TDS_RETURN_DONE | TDS_RETURN_ROW | TDS_RETURN_COMPUTE))
+#elif defined(HAVE_FREETDS_VER0_63)
        while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds,
 	                                          &tds_cnc->result_type, NULL))
               == TDS_SUCCEED) {
@@ -386,7 +397,13 @@
 				g_object_unref (recset);
 				recset = NULL;
 				return NULL;
-			} else if (tds_cnc->rc != TDS_NO_MORE_ROWS) {
+			} else if (tds_cnc->rc != 
+#if defined(HAVE_FREETDS_VER0_64)
+					TDS_NO_MORE_RESULTS
+#else
+					TDS_NO_MORE_ROWS
+#endif
+					) {
 				error = gda_freetds_make_error(tds_cnc->tds,
 				                               _("Unexpected freetds return code in tds_process_row_tokens().\n"));
 				gda_connection_add_error (cnc, error);
