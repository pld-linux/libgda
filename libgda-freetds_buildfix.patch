--- libgda-1.9.100/providers/freetds/gda-freetds-message.c.orig	2003-01-16 01:10:30.000000000 +0100
+++ libgda-1.9.100/providers/freetds/gda-freetds-message.c	2005-10-20 11:20:09.000000000 +0200
@@ -32,7 +32,7 @@
 
 GdaFreeTDSMessage
 *gda_freetds_message_new (GdaConnection *cnc,
-                          TDSMSGINFO *info,
+                          TDSMESSAGE *info,
                           const gboolean is_err_msg)
 {
 	GdaFreeTDSConnectionData *tds_cnc;
@@ -46,7 +46,7 @@
 	g_return_val_if_fail (message != NULL, NULL);
 
 	message->is_err_msg = is_err_msg;
-	memcpy ((void *) &message->msg, (void *) info, sizeof (TDSMSGINFO));
+	memcpy ((void *) &message->msg, (void *) info, sizeof (TDSMESSAGE));
 	if (info->server != NULL)
 		message->msg.server = g_strdup (info->server);
 	if (info->message != NULL)
@@ -61,7 +61,7 @@
 
 GdaFreeTDSMessage *
 gda_freetds_message_add (GdaConnection *cnc,
-                         TDSMSGINFO *info,
+                         TDSMESSAGE *info,
                          const gboolean is_err_msg)
 {
 	GdaFreeTDSMessage *msg = NULL;
--- libgda-1.9.100/providers/freetds/gda-freetds-message.h.orig	2003-01-16 01:10:30.000000000 +0100
+++ libgda-1.9.100/providers/freetds/gda-freetds-message.h	2005-10-20 11:20:21.000000000 +0200
@@ -39,14 +39,14 @@
 struct _GdaFreeTDSMessage {
 	gboolean    is_err_msg;
 
-	TDSMSGINFO  msg;
+	TDSMESSAGE  msg;
 };
 
 GdaFreeTDSMessage *gda_freetds_message_new (GdaConnection *cnc,
-                                            TDSMSGINFO *info,
+                                            TDSMESSAGE *info,
                                             const gboolean is_err_msg);
 GdaFreeTDSMessage *gda_freetds_message_add (GdaConnection *cnc,
-                                            TDSMSGINFO *info,
+                                            TDSMESSAGE *info,
                                             const gboolean is_err_msg);
 void gda_freetds_message_free (GdaFreeTDSMessage *message);
 
--- libgda-1.9.100/providers/freetds/gda-freetds-provider.c.orig	2005-09-22 12:24:01.000000000 +0200
+++ libgda-1.9.100/providers/freetds/gda-freetds-provider.c	2005-10-20 11:33:03.000000000 +0200
@@ -120,10 +120,10 @@
 #if defined(HAVE_FREETDS_VER0_6X) || defined(HAVE_FREETDS_VER0_60)
   static int gda_freetds_provider_tds_handle_info_msg (TDSCONTEXT *,
                                                        TDSSOCKET *,
-                                                       TDSMSGINFO *);
+                                                       TDSMESSAGE *);
   static int gda_freetds_provider_tds_handle_err_msg (TDSCONTEXT *,
                                                       TDSSOCKET *,
-                                                      TDSMSGINFO *);
+                                                      TDSMESSAGE *);
 #else
   static int gda_freetds_provider_tds_handle_info_msg (void *aStruct);
   static int gda_freetds_provider_tds_handle_err_msg (void *aStruct);
@@ -359,7 +359,7 @@
 	}
 	if (tds_cnc->config) {
 #ifdef HAVE_FREETDS_VER0_6X
-		tds_free_connect (tds_cnc->config);
+		tds_free_connection (tds_cnc->config);
 #else
 		tds_free_config(tds_cnc->config);
 #endif
@@ -664,7 +664,7 @@
 				GdaParameterList *params)
 {
 	GdaDataModel *model = NULL;
-	TDSCOLINFO col;
+	TDSCOLUMN col;
 	GdaValueType gda_type;
 	GdaValue     *value = NULL;
 	gint i = 1;
@@ -797,7 +797,7 @@
 
 	/* there should not be any result tokens */
 #ifdef HAVE_FREETDS_VER0_6X
-	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds, &tds_cnc->result_type))
+	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds, &tds_cnc->result_type, NULL))
 #else
 	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds)) 
 #endif
@@ -1037,7 +1037,7 @@
                                                     const gboolean is_err_msg)
 {
 	TDSSOCKET *tds = (TDSSOCKET *) aStruct;
-	TDSMSGINFO *msg_info = (TDSMSGINFO *) bStruct;
+	TDSMESSAGE *msg_info = (TDSMESSAGE *) bStruct;
 	GdaConnection *cnc = NULL;
 	GdaFreeTDSConnectionData *tds_cnc = NULL;
 	GdaConnectionEvent *error = NULL;
@@ -1093,7 +1093,7 @@
 /* FIXME: rewrite tds_handle_message as well/use new parameters here */
 static int
 gda_freetds_provider_tds_handle_info_msg (TDSCONTEXT *ctx, TDSSOCKET *tds,
-                                          TDSMSGINFO *msg)
+                                          TDSMESSAGE *msg)
 {
 	return gda_freetds_provider_tds_handle_message ((void *) tds,
 #ifdef HAVE_FREETDS_VER0_6X
@@ -1115,7 +1115,7 @@
 /* FIXME: rewrite tds_handle_message as well/use new parameters here */
 static int
 gda_freetds_provider_tds_handle_err_msg (TDSCONTEXT *ctx, TDSSOCKET *tds,
-                                         TDSMSGINFO *msg)
+                                         TDSMESSAGE *msg)
 {
 	return gda_freetds_provider_tds_handle_message ((void *) tds,
 #ifdef HAVE_FREETDS_VER0_6X
--- libgda-1.9.100/providers/freetds/gda-freetds-provider.h.orig	2003-09-17 13:05:03.000000000 +0200
+++ libgda-1.9.100/providers/freetds/gda-freetds-provider.h	2005-10-20 11:29:54.000000000 +0200
@@ -64,7 +64,7 @@
 #endif
 	TDSSOCKET      *tds;       /* connection handle */
 #ifdef HAVE_FREETDS_VER0_6X
-	TDSCONNECTINFO *config;    /* tds connect struct */
+	TDSCONNECTION *config;    /* tds connect struct */
 #else
 	TDSCONFIGINFO  *config;     /* tds config struct */
 #endif
--- libgda-1.9.100/providers/freetds/gda-freetds-recordset.c.orig	2005-09-22 12:24:01.000000000 +0200
+++ libgda-1.9.100/providers/freetds/gda-freetds-recordset.c	2005-10-20 11:30:46.000000000 +0200
@@ -61,7 +61,7 @@
 /* Private utility functions */
 
 /* w/o results */
-static TDSCOLINFO *gda_freetds_dup_tdscolinfo (TDSCOLINFO *col);
+static TDSCOLUMN *gda_freetds_dup_tdscolinfo (TDSCOLUMN *col);
 static GdaRow *gda_freetds_get_current_row(GdaFreeTDSRecordset *recset);
 
 static gint
@@ -165,7 +165,7 @@
 		}
 		if (recset->priv->columns) {
 			while (recset->priv->columns->len > 0) {
-				TDSCOLINFO *col = (TDSCOLINFO *) g_ptr_array_index (recset->priv->columns, 0);
+				TDSCOLUMN *col = (TDSCOLUMN *) g_ptr_array_index (recset->priv->columns, 0);
 				if (col != NULL) {
 					g_free (col);
 					col = NULL;
@@ -203,7 +203,7 @@
 	
 	for (i = 0; i < recset->priv->res->num_cols; i++) {
 		GdaValue   *field;
-		TDSCOLINFO *col;
+		TDSCOLUMN *col;
 
 		field = gda_row_get_value (row, i);
 		col = recset->priv->res->columns[i];
@@ -216,16 +216,16 @@
 	return row;
 }
 
-static TDSCOLINFO *
-gda_freetds_dup_tdscolinfo (TDSCOLINFO *col)
+static TDSCOLUMN *
+gda_freetds_dup_tdscolinfo (TDSCOLUMN *col)
 {
-	TDSCOLINFO *copy = NULL;
+	TDSCOLUMN *copy = NULL;
 
 	g_return_val_if_fail (col != NULL, NULL);
 
-	copy = g_new0(TDSCOLINFO, 1);
+	copy = g_new0(TDSCOLUMN, 1);
 	if (copy) {
-		memcpy(copy, col, sizeof(TDSCOLINFO));
+		memcpy(copy, col, sizeof(TDSCOLUMN));
 		
 		/* set pointers to NULL */
 		copy->column_nullbind = NULL;
@@ -271,7 +271,7 @@
 gda_freetds_recordset_describe_column (GdaDataModel *model, gint col)
 {
 	GdaFreeTDSRecordset *recset = (GdaFreeTDSRecordset *) model;
-	TDSCOLINFO          *colinfo = NULL;
+	TDSCOLUMN          *colinfo = NULL;
 	GdaColumn           *attribs;
 	gchar               name[256];
 
@@ -280,7 +280,7 @@
 	g_return_if_fail (recset->priv->columns != NULL);
 	g_return_if_fail (col < recset->priv->columns->len);
 
-	colinfo = (TDSCOLINFO *) g_ptr_array_index (recset->priv->columns, col);
+	colinfo = (TDSCOLUMN *) g_ptr_array_index (recset->priv->columns, col);
 	g_return_if_fail (colinfo);
 	
 	attribs = gda_data_model_describe_column (model, col);
@@ -311,7 +311,7 @@
 {
 	GdaFreeTDSConnectionData *tds_cnc = NULL;
 	GdaFreeTDSRecordset *recset = NULL;
-	TDSCOLINFO *col = NULL;
+	TDSCOLUMN *col = NULL;
 	GdaRow *row = NULL;
 	GdaConnectionEvent *error = NULL;
 	gboolean columns_set = FALSE;
@@ -330,7 +330,7 @@
 
 #ifdef HAVE_FREETDS_VER0_6X
 	while ((tds_cnc->rc = tds_process_result_tokens (tds_cnc->tds,
-							 &tds_cnc->result_type))
+							 &tds_cnc->result_type, NULL))
 	       == TDS_SUCCEED) {
 		if (tds_cnc->result_type == TDS_ROW_RESULT) {
 			gint row_type, compute_id;
--- libgda-1.9.100/providers/freetds/gda-freetds-types.c.orig	2005-09-16 11:55:02.000000000 +0200
+++ libgda-1.9.100/providers/freetds/gda-freetds-types.c	2005-10-20 11:31:00.000000000 +0200
@@ -35,7 +35,7 @@
 static void
 gda_freetds_set_gdavalue_by_datetime (GdaValue     *field,
                                       TDS_DATETIME *dt,
-                                      TDSCOLINFO   *col
+                                      TDSCOLUMN   *col
                                      )
 {
 	GDate        date;
@@ -82,7 +82,7 @@
 static void
 gda_freetds_set_gdavalue_by_datetime4 (GdaValue      *field,
                                        TDS_DATETIME4 *dt4,
-                                       TDSCOLINFO    *col
+                                       TDSCOLUMN    *col
                                       )
 {
 	GDate        date;
@@ -123,7 +123,7 @@
  */
 
 const GdaValueType
-gda_freetds_get_value_type (TDSCOLINFO *col)
+gda_freetds_get_value_type (TDSCOLUMN *col)
 {
 	g_return_val_if_fail (col != NULL, GDA_VALUE_TYPE_UNKNOWN);
 
@@ -185,7 +185,7 @@
 
 
 void
-gda_freetds_set_gdavalue (GdaValue *field, gchar *val, TDSCOLINFO *col,
+gda_freetds_set_gdavalue (GdaValue *field, gchar *val, TDSCOLUMN *col,
 			  GdaFreeTDSConnectionData *tds_cnc)
 {
 	const TDS_INT max_size = 255;
--- libgda-1.9.100/providers/freetds/gda-freetds-types.h.orig	2003-01-16 01:10:30.000000000 +0100
+++ libgda-1.9.100/providers/freetds/gda-freetds-types.h	2005-10-20 11:31:11.000000000 +0200
@@ -34,9 +34,9 @@
 
 G_BEGIN_DECLS
 
-void gda_freetds_set_gdavalue (GdaValue *field, gchar *val, TDSCOLINFO *col,
+void gda_freetds_set_gdavalue (GdaValue *field, gchar *val, TDSCOLUMN *col,
                                GdaFreeTDSConnectionData *tds_cnc);
-const GdaValueType gda_freetds_get_value_type (TDSCOLINFO *col);
+const GdaValueType gda_freetds_get_value_type (TDSCOLUMN *col);
 
 
 G_END_DECLS
